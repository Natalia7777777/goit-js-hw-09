{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAE/BC,iBAAiB,UAoBtB,SAAsBC,G,oBAWlBC,YAAW,WA7Bf,IAAuBC,EAAUC,EACzBC,GADeF,EA8BHG,EA9BaF,EA8BVG,EA7BfF,EAAgBG,KAAKC,SAAW,GAE/B,IAAIC,SAAQ,SAACC,EAASC,GACvBP,EACFM,EAAQ,CACNR,SAAUA,EACVC,MAAOA,IAGTQ,EAAO,CACLT,SAAUA,EACVC,MAAOA,QAmBNS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MACjBR,EAAAmB,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,UAE9Dc,OAAM,SAAAJ,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAClBR,EAAAmB,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,YAE7DgB,IAlBLnB,EAAEoB,iBASF,IAPA,IAEYC,EAARrB,EAAEsB,OADJC,SAAYJ,EAAKE,EAALlB,MAAOqB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGrBC,EAAcC,OAAOR,EAAMS,OAC3BC,EAAaF,OAAOH,EAAKI,OAEtBE,EAAI,EAAGC,EAAIL,EAAaI,GAAKL,EAAOG,MAAOE,GAAK,EAAGC,GAAKF,EAAUG,EAAAF,EAAAC,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({\n        position: position,\n        delay: delay,\n      });\n    } else {\n      reject({\n        position: position,\n        delay: delay,\n      });\n    }\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = e.target;\n\n  const delayNumber = Number(delay.value);\n  const stepNumber = Number(step.value);\n\n  for (let i = 1, j = delayNumber; i <= amount.value; i += 1, j += stepNumber) {\n    setTimeout(() => {\n      createPromise(i, j)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, delay);\n  }\n}\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","e","setTimeout","position","delay","shouldResolve","i","j","Math","random","Promise","resolve","reject","then","param","Notify","success","concat","catch","failure","delay1","preventDefault","_elements","target","elements","step","amount","delayNumber","Number","value","stepNumber","i1","j1","_loop"],"version":3,"file":"03-promises.3cf59bf0.js.map"}